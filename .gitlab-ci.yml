---
image: docker:19.03.5
services:
  - docker:19.03.5-dind

variables:
  BRANCH: $CI_COMMIT_REF_NAME
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  # docker build
  ANNO_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  BUILDER_IMAGE_NAME: $CI_REGISTRY_IMAGE-builder:$CI_COMMIT_REF_SLUG
  PROD_IMAGE_NAME: $CI_REGISTRY_IMAGE-prod:$CI_COMMIT_REF_SLUG
  PIPELINE_ID: anno-$CI_PIPELINE_ID

stages:
  - build
  - test

.image-setup:
  before_script:
    - apk add --update make git

run_pytest:
  extends: .image-setup
  stage: test
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $BUILDER_IMAGE_NAME
    - docker pull $PROD_IMAGE_NAME
    - make download-data
    - make test
  after_script:
    - make cleanup

# build:
#   stage: build
#   extends: .image-setup
#   script:
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker pull $CI_REGISTRY_IMAGE:prod-latest | cat || true
#     - docker pull $CI_REGISTRY_IMAGE:builder-latest | cat || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:builder-latest -t $BUILDER_IMAGE_NAME -t $CI_REGISTRY_IMAGE:builder-latest --target builder .
#     - docker build --cache-from $CI_REGISTRY_IMAGE:prod-latest -t $PROD_IMAGE_NAME -t $CI_REGISTRY_IMAGE:prod-latest --target prod .
#     - docker push $PROD_IMAGE_NAME
#     - docker push $CI_REGISTRY_IMAGE:prod-latest
#     - docker push $BUILDER_IMAGE_NAME
#     - docker push $CI_REGISTRY_IMAGE:builder-latest

build:
  stage: build
  extends: .image-setup
  script:
    - env | grep -P '^(CI|GITLAB)_'
    - docker login -u tsnowlan -p $CI_REGISTRY_RW $CI_REGISTRY
    - export
    - docker build -t buildtest --target buildtest .
    - docker push buildtest
