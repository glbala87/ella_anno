---
# ref: https://docs.gitlab.com/ee/ci/yaml/index.html#workflowrules-templates
# tag pipeline > MR pipeline > dev pipeline
workflow:
    rules:
        - if: $CI_COMMIT_TAG
        - if: $CI_MERGE_REQUEST_IID
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

image: docker:20.10.7
services:
    - docker:20.10.7-dind

variables:
    BRANCH: $CI_COMMIT_REF_NAME
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: /certs
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    # show useful build info
    BUILDKIT_PROGRESS: plain

    # we can only build to one image name, everything has to be done under tags
    PIPELINE_ID: anno-$CI_PIPELINE_ID
    USE_REGISTRY: 1

    # singularity-in-docker
    SID_IMAGE: quay.io/singularity/singularity
    SID_VERSION: v3.8.1
    SID_SLUG: $SID_IMAGE:$SID_VERSION

stages:
    - build
    - test
    - release

.image_setup: &image-setup
    before_script:
        - apk add --update make git
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.release_setup: &release-setup
    image: $SID_SLUG
    before_script:
        - apk add --update make git python3 py3-click docker-cli bash

# build both at once to reuse local cache
build_docker:
    stage: build
    extends: .image_setup
    script:
        - make ci-build-docker
    after_script:
        - make ci-push-docker
    tags:
        - bastion

check_do:
    stage: test
    extends: .image_setup
    script:
        - make pull-builder verify-digital-ocean
    tags:
        - bastion

check_pipenv:
    stage: test
    extends: .image_setup
    script:
        - make pull-builder pipenv-check
    tags:
        - bastion

run_pytest:
    extends: .image_setup
    stage: test
    script:
        - make pull
        - make download-data RUN_CMD_ARGS="--skip-validation --force"
        - make test
        - make test-ops
    tags:
        - do-large

release_singularity:
    stage: release
    extends: .release_setup
    variables:
        RELEASE_TAG: $CI_COMMIT_REF_NAME
    script:
        - make pull-prod release
    artifacts:
        name: anno-$CI_COMMIT_REF_NAME.sif
        paths:
            - release/
        expire_in: 30 days
    rules:
        # automatically generate release artifacts for tags and dev
        - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
        # allow manual triggering on merge requests to avoid creating fake tags when testing changes
        # to release process/artifacts. Will block waiting for manual trigger without allow_failure
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: manual
          allow_failure: true
